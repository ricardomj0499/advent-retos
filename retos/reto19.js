/*
En Platzi tienen m√°s de 800 cursos üìö pero, claro, nuestro tiempo es limitado. As√≠ que vamos a optimizar nuestro tiempo disponible para completar dos cursos usando el m√°ximo n√∫mero de horas disponible.

Tenemos que crear una funci√≥n que recibe dos par√°metros. El primero es el n√∫mero de horas que tenemos disponible ‚è≥ y el segundo es un array donde cada √≠ndice es un curso y el valor el tiempo que se tarda en completar.

Tenemos claro que queremos hacer dos cursos as√≠ que la funci√≥n debe devolver un array con el √≠ndice de los dos cursos que vamos a poder completar con el tiempo disponible proporcionado y usando el m√°ximo tiempo disponible. Si no nos da tiempo, devolvemos null
*/

export default function learn(time, courses) {
    //console.log("///////////////////////////////");
    let a, b;
    let max = 0;
    const largo = courses.length;
    for (let x = 0; x < largo - 1; x++) {
        for (let y = x + 1; y < largo; y++) {
            //console.log("x,y: ", x, ",", y);
            //console.log("[x],[y]: ", courses[x], ",", courses[y]);
            let suma = courses[x] + courses[y];
            //console.log("suma> ", suma);
            if (suma <= time && suma > max) {
                a = x;
                b = y;
                max = suma;
            }
        }
    }
    console.log(a !== undefined ? [a, b] : null);
    return a !== undefined ? [a, b] : null;
}

console.log(learn(10, [2, 3, 8, 1, 4])); // [0, 2] -> con 10 horas disponibles lo mejor es que completemos los cursos en el √≠ndice 0 y 2.

console.log(learn(15, [2, 10, 4, 1])); // [1, 2] -> Los cursos en [1, 2] son 14 horas, es la mejor opci√≥n.

console.log(learn(25, [10, 15, 20, 5])); // [0, 1] -> los cursos [0, 1] y [2, 3] completan exactamente con 25 horas pero siempre devolvemos el primero que encontremos

console.log(learn(8, [8, 2, 1])); // [1, 2] -> para hacer dos cursos, no podemos hacer el de 8 horas, as√≠ que devolvemos el de 1 y 2.

console.log(learn(8, [8, 2, 1, 4, 3])); // [3, 4] -> usamos el m√°ximo tiempo disponible as√≠ que [3, 4] usa 7 horas y el [1, 2] s√≥lo usar√≠a 3 horas.

console.log(learn(4, [10, 14, 20])); // null -> no nos da tiempo a hacer dos cursos

console.log(learn(5, [5, 5, 5])); // null -> no nos da tiempo a hacer dos cursos
