/*
 hacer la ruta perfecta para dejar los regalos.
 La ruta empieza en el punto 0 y de ah칤 va hacia la derecha en l칤nea recta.
 una lista de obst치culos a evitar. El problema es que nos ha dado la lista de posiciones de los obst치culos desordenada... 游땐 aunque al menos nunca la posici칩n 0 puede tener un obst치culo.
 Encima, el trineo s칩lo se puede configurar para saltar un n칰mero fijo de posiciones... 游땸
 Necesitamos una funci칩n que nos diga la longitud m칤nima del salto del trineo para ir evitando todos los obst치culos en la ruta.
*/

export default function getMinJump(obstacles) {
    const numObstacles = obstacles.length;
    if (!numObstacles) {
        return 1;
    }

    const modToTest = [2, 3, 4, 5, 6, 7, 8, 9, 10];

    for (const mod in modToTest) {
        let isMin = true;
        console.log("mod: ", modToTest[mod]);
        for (const obs in obstacles) {
            if (obstacles[obs] % modToTest[mod] === 0) {
                console.log("if mod === 0");
                isMin = false;
                break;
            }
            console.log("obs: ", obstacles[obs]);
        }
        if (isMin) {
            return modToTest[mod];
        }
    }
    return -1;
}
